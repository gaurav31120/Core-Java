25 Creation of Array

Here, we are discussing:
1)How many way to create array in java?
2)default value store when we creating array with object notation
3) fetching the value assign different value array element

#1
Ways to create array in java
a)Literal notation
Literal notation: int[] arr = {1, 2, 3};
b)Object notation
Array constructor: int[] arr = new int[]{1, 2, 3}; // this is not literal notation ,this is object notation with assignment of value
Array constructor with size: int[] arr = new int[3]; arr[0] = 1; arr[1] = 2; arr[2] = 3; //in this we manually assign value but by default 0 is assign in this case 

#2
default value which store array when we create using object notation for primitive datatype.

-- When you create an array of primitive data types in Java using the object notation, the default value stored in the array depends on the data type:

 -- int arrays: default value is 0
 -- boolean arrays: default value is false
 -- char arrays: default value is '\u0000' (null character)
 -- byte, short, long arrays: default value is 0
 -- float arrays: default value is 0.0f
 -- double arrays: default value is 0.0d


code for you --
char ch[]=new char[3]; //declaration and initialization
      
for(int i=0;i less then ch.length;i++){
    System.out.println(ch[i]);
}

check result--

#4
fetching the element of array :
-- for traversing whole array, you need to know either length of array or know length property of array
-- using length property we get length of array
-- using index we can fetch all value of array

suppose we create int nums[]={2,3,4,5};
access first element then nums[0],
access second element nums[1],
access third element nums[2],
access fourth element nums[3];

-- if you match pattern for accessing the element
you get nth element is nums[n-1];
for 7th element nums[7-1]; i.e is nums[6]

-- in array position start from 0,1,2, go till n-1 if n is length of array
change value of given position

int nums[]={2,3,4,5};

for(int i=0;i less then nums.length;i++){
    System.out.println(nums[i]);
} //traversing whole array -- means fetching all elements of array

nums[0]=10;
nums[1]=11;
nums[2]=22;
nums[3]=33; 

for(int i=0;i less then nums.length;i++){
    System.out.println(nums[i]);
}

26 Multi Dimensional Array

Here we are discussing:
1)what is multidimensional array?
2)Why do we need multidimension array?
3)How to create multidimension array?
4)How to access element of multidimension array?
5)how to use enhanced for loop and simple loop in multidimension array to traverse array element?

#1
what is multidimension array?
-- simple we can say it is array of array

-------------
| 1 | 2 | 3 |
-------------
| 4 | 5 | 6 |
-------------

Above is example of 2-d array which has 2 rows and 3 columns.
-- it seems to look like a bigger array consist two single dimension array.
-- just like we have 3-d array and array might be n-dimension.

#2
Why do we need multidimension array?
-- to solve some matrix problem to solve grid problem

#3
How to create multidimension in java?
-- different Ways to create array in java
  a)Literal notation
  Literal notation: int [][]arr = {{1, 2, 3},{4,5,6}};
  b)Object notation
  int [][]nums=new int[2][3];

-- general syntax for object notation:
-- dataType [][]arrayName=new dataType[rows][columns];

#4
how to access element of multidimension array element?
let we create 2d array arr
int [][]arr = {{1, 2, 3},{4,5,6}};
-------------
| 1 | 2 | 3 |
-------------
| 4 | 5 | 6 |
-------------

-- there are two rows whose index are 0,1 and columns are 0,1,2.
-- want to access 2 which are at row 0 and columns 1
-- System.out.println(arr[0][1]); //give 2 

simple if you want to access element at ith row and jth column then;
arr[i][j]; //it is value at that position

#5
How to use enhanced for loop 

for  array name arr:
-- using for loop traverse all element
-- arr.length give number of rows and arr[0].length give number of column in first row 
for(int i=0;i arr.length;i++){
    for(int j=0;j arr[0].length;j++){
        System.out.print(arr[i][j]+" ");
    }
    System.out.println();
}

using enhanced for loop:
for(int x[]: arr){
    for(int y:x){
        System.out.print(y+" ");
    }
    System.out.println();
}

general syntax for enhanced for-loop 
for(dataType singleDimension[]: twoDimension){
    for(dataType element: singleDimension){
        System.out.println(element);
    }
}

27 jagged and 3D Array

Here we are discussing:
1)What if array of array of different size ?
2)Jagged array concept
3)If i donot know column size of array 
4)traverse the array using for loop and enhance loop

#1
Suppose we want to create a 2d dimensional array such that it has 
5 rows but we donot know for each row we need different size for column.
for that we go for array of array of different size

-------------
| 1 | 2 | 3 |
---------------------
| 4 | 5 | 6 | 7 | 8 |
-------------------------
| 1 | 5 | 9 | 2 | 4 | 7 |
-------------------------

in above diagram we have three rows and first row has 3 elements
second row has 5 elements and third row has 6 elements.

#2#3
jagged array concept come in java 8 
-- Jagged array is a multidimensional array where member arrays are of different size. For example, we can 
create a 2D array where first array is of 3 elements, and is of 4 elements. Following is the example demonstrating
 the concept of jagged array.

 syntax to create --

 int nums[][]=new int[3][];
 nums[0] =new int[3];
 nums[1] =new int[5];
 nums[2] =new int[6];

initalize value in array using random()method present in Math class
  for(int i=0;i nums.length;i++){
            for(int j=0;j nums[i].length;j++){
                nums[i][j]=(int)(Math.random()*10);
            }
        }
#5
Traverse using for loop :
   for(int i=0;i nums.length;i++){
            for(int j=0;j nums[i].length;j++){
                System.out.print(nums[i][j]+" ");
            }
        }

Traverse using enhanced for loop:
  for(int x[]:nums){
            for(int y:x){
                System.out.println(y);
            }
        }    

Note: Just like 2-d jagged array we can create 3-d , 4-d jagged array
for cursoity:
 int num[][][]=new int[3][][];
        num[0]=new int[2][];
        num[1]=new int[3][];    
        num[2]=new int[4][];
        num[0][0]=new int[2];
        num[0][1]=new int[3];
        num[1][0]=new int[4];
        num[1][1]=new int[5];
        num[1][2]=new int[6];
        num[2][0]=new int[7];
        num[2][1]=new int[8];
        num[2][2]=new int[9];
        num[2][3]=new int[10];

Intialize the array:
for(int i=0;i num.length;i++){
    for(int j=0;j num[i].length;j++){
        for(int k=0;k num[i][j].length;k++){
            num[i][j][k]=(int)(Math.random()*10);
        }
    }
}

Traverse the element of array:
for(int i=0;i num.length;i++){
    for(int j=0;j num[i].length;j++){
        for(int k=0;k num[i][j].length;k++){
            System.out.print(num[i][j][k]+" ");
        }
    }
}
-----------------------------------------------------
28 Drawbacks of Array

Here we are discussing drawback of array:
-- if we say new it create object in heap 
-- Array need contagious memory allocation
--  Once you create array you cannot increase size in current array
-- for insertion and searching in array performance is low as compare 
hashset, linkedhashset, linkedlist in upcoming lecture we talking about collection so you understand why we need other data structure to store element.
-- only homogenous data allowed in array e.g if data is int type then you cannot add string , float and other data type in it.
-- collection is solution for this

------------------------------------
29 Array of Objects

Here we are discussing about array of objects:
-- If we create array by default value assign for each type of array
-- The new operator automatically initializes the elements of an array to their default value, which, for example, is zero for all numeric types
and null for all reference types.
-- why we should we know length of array using length property?
-- There is array out of bound exception.

How to create array of object and what does it means?
-- just like to create array for int, float, char we can create array of object 
-- when we we create array of object it means we create an array which can hold the reference of object.

e.g
class Student{

}

Student st=new Student();
we know st is reference and new Student() is object.
and st hold reference of student object.

similarly whenever we create array of object
Student sts[]=new Student[5];
it means we can create an array of Student reference type which can hold 5 different reference of
Student object.
sts[0]=new Student();
sts[1]=new Student();
sts[2]=new Student();
sts[3]=new Student();
sts[4]=new Student();

-----------------------------------------------


